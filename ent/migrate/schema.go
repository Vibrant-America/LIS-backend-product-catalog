// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ItemsColumns holds the columns for the "items" table.
	ItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"TEST", "GROUP"}, Default: "TEST"},
		{Name: "type_id", Type: field.TypeString},
		{Name: "order_type_id", Type: field.TypeString, Nullable: true},
		{Name: "is_orderable", Type: field.TypeBool, Default: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "unique_emr_code", Type: field.TypeString, Nullable: true},
		{Name: "tax_code", Type: field.TypeString, Nullable: true},
		{Name: "weblink", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "sample_type_list", Type: field.TypeJSON, Nullable: true},
		{Name: "subpackages_list", Type: field.TypeJSON, Nullable: true},
		{Name: "subtests_list", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ItemsTable holds the schema information for the "items" table.
	ItemsTable = &schema.Table{
		Name:       "items",
		Columns:    ItemsColumns,
		PrimaryKey: []*schema.Column{ItemsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "item_type_type_id",
				Unique:  false,
				Columns: []*schema.Column{ItemsColumns[1], ItemsColumns[2]},
			},
			{
				Name:    "item_type_id",
				Unique:  false,
				Columns: []*schema.Column{ItemsColumns[2]},
			},
			{
				Name:    "item_order_type_id",
				Unique:  false,
				Columns: []*schema.Column{ItemsColumns[3]},
			},
		},
	}
	// MerchandisesColumns holds the columns for the "merchandises" table.
	MerchandisesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"item", "service"}, Default: "item"},
		{Name: "type_id", Type: field.TypeString, Nullable: true},
		{Name: "stock", Type: field.TypeInt, Default: -1},
		{Name: "pending_period", Type: field.TypeInt, Default: -1},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "picture_url", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "price", Type: field.TypeFloat64, Nullable: true},
		{Name: "refundable_ratio", Type: field.TypeFloat64, Nullable: true},
		{Name: "deduction_ratio", Type: field.TypeFloat64, Nullable: true},
		{Name: "deduction_reason", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// MerchandisesTable holds the schema information for the "merchandises" table.
	MerchandisesTable = &schema.Table{
		Name:       "merchandises",
		Columns:    MerchandisesColumns,
		PrimaryKey: []*schema.Column{MerchandisesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "merchandise_type_type_id",
				Unique:  false,
				Columns: []*schema.Column{MerchandisesColumns[1], MerchandisesColumns[2]},
			},
			{
				Name:    "merchandise_type_id",
				Unique:  false,
				Columns: []*schema.Column{MerchandisesColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ItemsTable,
		MerchandisesTable,
	}
)

func init() {
}
